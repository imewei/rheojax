[build-system]
requires = ["setuptools>=68.0", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "rheo"
version = "1.0.0"
description = "Unified rheological analysis framework with JAX acceleration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Rheo Development Team", email = "rheo@example.com"},
]
maintainers = [
    {name = "Rheo Development Team", email = "rheo@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"

# Note: piblin and nlsq are marked as required in the spec but may not be available
# in PyPI yet. For development, these can be installed separately.
dependencies = [
    "jax>=0.4.20",
    "jaxlib>=0.4.20",
    "numpyro>=0.13.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
]

[project.optional-dependencies]
# Core dependencies that may not be on PyPI yet
core = [
    # "piblin>=0.5.0",  # Required but may need manual installation
    # "nlsq>=0.2.0",     # Required but may need manual installation
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "hypothesis>=6.92.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
]
ml = [
    "scikit-learn>=1.3.0",
]
io = [
    "h5py>=3.9.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
]
gpu = [
    "jax[cuda12_pip]>=0.4.20",
]
all = [
    "rheo[core,dev,ml,io]",
]

[project.urls]
"Homepage" = "https://github.com/username/rheo"
"Bug Tracker" = "https://github.com/username/rheo/issues"
"Documentation" = "https://rheo.readthedocs.io"
"Source Code" = "https://github.com/username/rheo"

[tool.setuptools.packages.find]
include = ["rheo", "rheo.*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"rheo" = ["py.typed", "*.json", "*.yaml"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=rheo",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.eggs
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B", "C", "E", "F", "W"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true