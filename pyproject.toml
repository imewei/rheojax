[build-system]
requires = ["setuptools>=68.0", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "rheojax"
version = "0.1.0"
description = "Unified rheological analysis framework with JAX acceleration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "RheoJAX Development Team", email = "rheojax@example.com"},
]
maintainers = [
    {name = "RheoJAX Development Team", email = "rheojax@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"

# ============================================================================
# GPU ACCELERATION (20-100x speedup for large datasets)
# ============================================================================
# Default: CPU-only JAX (works on ALL platforms: Linux, macOS, Windows)
#
# For GPU acceleration (Linux + CUDA 12.1-12.9 ONLY):
#
#   Quick install (from repository):
#     make install-jax-gpu
#
#   Manual install:
#     pip uninstall -y jax jaxlib
#     pip install jax[cuda12-local]==0.8.0 jaxlib==0.8.0
#
#   Platform support:
#     ✅ Linux + NVIDIA GPU + CUDA 12.1-12.9: Full GPU acceleration
#     ❌ macOS: CPU-only (Apple Silicon/Intel, no NVIDIA GPU support)
#     ❌ Windows: CPU-only (CUDA support experimental/unstable)
#
#   Requirements:
#     - System CUDA 12.1-12.9 pre-installed (not bundled)
#     - NVIDIA driver >= 525
#     - Linux x86_64 or aarch64
#
# See README.md for detailed GPU installation guide
# ============================================================================
dependencies = [
    # Core scientific computing
    "numpy>=1.24.0,<3.0.0",
    "scipy>=1.11.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "matplotlib>=3.7.0,<4.0.0",

    # GPU-accelerated optimization (CRITICAL: must be imported before JAX)
    # NLSQ auto-configures JAX for float64 precision when imported
    "nlsq>=0.1.6",

    # JAX ecosystem (CPU-only - works on all platforms)
    # GPU users: see installation instructions above
    "jax==0.8.0",     # JAX 0.8.0 CPU-only - exact version required
    "jaxlib==0.8.0",  # jaxlib 0.8.0 CPU-only - must match JAX version exactly

    # Probabilistic programming
    "numpyro>=0.13.0,<1.0.0",

    # Bayesian visualization and diagnostics
    "arviz>=0.15.0,<1.0.0",
]

[project.optional-dependencies]
# Core dependencies that may not be on PyPI yet
core = [
    # "piblin>=0.5.0",  # Required but may need manual installation
]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "hypothesis>=6.92.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
]
ml = [
    "scikit-learn>=1.3.0",
]
io = [
    "h5py>=3.9.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
]
# NOTE: No gpu extra - GPU installation must be done manually to avoid conflicts.
# See GPU ACCELERATION section above for installation instructions.
# Use: make install-jax-gpu (from repository) or manual pip commands.
all = [
    "rheojax[core,dev,ml,io]",
]

[project.urls]
"Homepage" = "https://github.com/imewei/rheojax"
"Bug Tracker" = "https://github.com/imewei/rheojax/issues"
"Documentation" = "https://rheojax.readthedocs.io"
"Source Code" = "https://github.com/imewei/rheojax"

[tool.setuptools.packages.find]
include = ["rheojax", "rheojax.*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"rheojax" = ["py.typed", "*.json", "*.yaml"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=rheojax",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
]
filterwarnings = [
    # Expected warnings from tests
    "ignore:FigureCanvasAgg is non-interactive:UserWarning",
    "ignore:More than 20 figures have been opened:RuntimeWarning",
    "ignore:There are not enough devices to run parallel chains:UserWarning",
    "ignore:Out-of-support values provided to log prob method:UserWarning",
    "ignore:Could not automatically detect test mode:UserWarning",
    "ignore:Failed to process.*File not found:UserWarning",
    "ignore:Data has no positive values.*cannot be log-scaled:UserWarning",
    "ignore:x-axis is not monotonic:UserWarning",
    # Suppress pytest collection warnings for non-test classes
    "ignore:cannot collect test class.*TestModeEnum.*:pytest.PytestCollectionWarning",
    # Suppress warnings from dependencies
    "ignore:invalid value encountered:RuntimeWarning:scipy",
    "ignore:invalid value encountered:RuntimeWarning:nlsq",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.eggs
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B", "C", "E", "F", "W"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
